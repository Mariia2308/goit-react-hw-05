{"version":3,"file":"MoviesPage-Uw7qD2ON.js","sources":["../../src/components/SearchBar/SearchBar.jsx","../../src/components/Empty/Empty.jsx","../../src/pages/MoviesPage.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport const SearchBar = ({ onSearch }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSearch(query.trim().toLowerCase());\n    setQuery(\"\"); \n  };\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","const Empty = () => {\n    return <p>There are no results.</p>;\n};\n  \nexport default Empty;","import { useState, useEffect } from \"react\";\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport { fetchMovieSearch } from \"../services/movies\";\nimport MovieList from \"../components/MovieDetail/MovieList\";\nimport { useSearchParams } from \"react-router-dom\";\nimport Loader from \"../components/Loader/Loader\";\nimport Error from \"../components/Error/Error\";\nimport Empty from \"../components/Empty/Empty\";\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get(\"query\");\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [errorName, setErrorName] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    const fetchMovies = async () => {\n      try {\n        setIsEmpty(false);\n        setIsLoading(true);\n        setIsError(false);\n        \n        const results = await fetchMovieSearch(searchQuery);\n        console.log('Movies Data:', results); // Log the response data for inspection\n\n        if (Array.isArray(results)) {\n          if (results.length === 0) {\n            setIsEmpty(true);\n            setMovies([]); // Ensure movies state is cleared when empty\n          } else {\n            setMovies(results); // Set the array of movies\n          }\n        } else {\n          // Handle unexpected response structure\n          setIsError(true);\n          setErrorName(\"Unexpected response structure.\");\n        }\n      } catch (error) {\n        // Catch and handle errors during fetching\n        setIsError(true);\n        setErrorName(error.message || 'An error occurred while fetching movies.');\n      } finally {\n        // Set loading to false once fetching is complete\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [searchQuery]);\n\n  const onFormSubmit = (query) => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <SearchBar onSearch={onFormSubmit} />\n      {isError && <Error errorName={errorName} />}\n      {isLoading && <Loader />}\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {isEmpty && <Empty />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["SearchBar","onSearch","query","setQuery","useState","handleSubmit","e","handleChange","jsx","jsxs","Empty","MoviesPage","searchParams","setSearchParams","useSearchParams","searchQuery","movies","setMovies","isLoading","setIsLoading","isError","setIsError","errorName","setErrorName","isEmpty","setIsEmpty","useEffect","results","fetchMovieSearch","error","onFormSubmit","Fragment","Error","Loader","MovieList"],"mappings":"qLAEO,MAAMA,EAAY,CAAC,CAAE,SAAAC,KAAe,CACzC,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAAS,EAAE,EAE/BC,EAAgBC,GAAM,CAC1BA,EAAE,eAAe,EACjBL,EAASC,EAAM,OAAO,YAAa,CAAA,EACnCC,EAAS,EAAE,CAAA,EAGPI,EAAgBD,GAAM,CACjBH,EAAAG,EAAE,OAAO,KAAK,CAAA,EAGzB,OACGE,EAAA,IAAA,MAAA,CACC,SAACC,EAAAA,KAAA,OAAA,CAAK,SAAUJ,EACd,SAAA,CAAAG,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAON,EACP,SAAUK,EACV,aAAa,MACb,UAAS,GACT,YAAY,eAAA,CACd,EACCC,EAAA,IAAA,SAAA,CAAO,KAAK,SAAS,SAAM,SAAA,CAAA,CAC9B,CAAA,CACF,CAAA,CAEJ,EC9BME,EAAQ,IACHF,EAAA,IAAC,KAAE,SAAqB,uBAAA,CAAA,ECQ7BG,EAAa,IAAM,CACvB,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAgB,EAClDC,EAAcH,EAAa,IAAI,OAAO,EACtC,CAACI,EAAQC,CAAS,EAAIb,EAAA,SAAS,CAAE,CAAA,EACjC,CAACc,EAAWC,CAAY,EAAIf,WAAS,EAAK,EAC1C,CAACgB,EAASC,CAAU,EAAIjB,WAAS,EAAK,EACtC,CAACkB,EAAWC,CAAY,EAAInB,WAAS,EAAE,EACvC,CAACoB,EAASC,CAAU,EAAIrB,WAAS,EAAK,EAE5CsB,EAAAA,UAAU,IAAM,CACd,GAAI,CAACX,EACH,QAGkB,SAAY,CAC1B,GAAA,CACFU,EAAW,EAAK,EAChBN,EAAa,EAAI,EACjBE,EAAW,EAAK,EAEV,MAAAM,EAAU,MAAMC,EAAiBb,CAAW,EAC1C,QAAA,IAAI,eAAgBY,CAAO,EAE/B,MAAM,QAAQA,CAAO,EACnBA,EAAQ,SAAW,GACrBF,EAAW,EAAI,EACfR,EAAU,CAAE,CAAA,GAEZA,EAAUU,CAAO,GAInBN,EAAW,EAAI,EACfE,EAAa,gCAAgC,SAExCM,EAAO,CAEdR,EAAW,EAAI,EACFE,EAAAM,EAAM,SAAW,0CAA0C,CAAA,QACxE,CAEAV,EAAa,EAAK,CACpB,CAAA,IAGU,EACX,CAACJ,CAAW,CAAC,EAEV,MAAAe,EAAgB5B,GAAU,CACdW,EAAA,CAAE,MAAAX,EAAO,CAAA,EAG3B,OAEIO,EAAA,KAAAsB,WAAA,CAAA,SAAA,CAACvB,EAAAA,IAAAR,EAAA,CAAU,SAAU8B,CAAc,CAAA,EAClCV,GAAYZ,EAAA,IAAAwB,EAAA,CAAM,UAAAV,CAAsB,CAAA,EACxCJ,SAAce,EAAO,EAAA,EACrBjB,EAAO,OAAS,GAAKR,EAAA,IAAC0B,GAAU,OAAAlB,EAAgB,EAChDQ,SAAYd,EAAM,EAAA,CACrB,CAAA,CAAA,CAEJ"}